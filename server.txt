#include<sys/socket.h>
#include<sys/types.h>
#include<stdio.h>
#include<stdlib.h>
#include<errno.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include<string.h>
#include<unistd.h>

#define ERR_EXIT(m)\
	do\
	{\
		perror(m);\
		exit(EXIT_FAILURE);\
	}while(0)

int main()
{
	int sockfd;
	struct sockaddr_in servaddr;					
	struct sockaddr_in peeraddr;					
	int nfd,ret;
	char buffer[1024];
	socklen_t peerlen;
	
	memset(&servaddr,0,sizeof(servaddr));				
	servaddr.sin_family = AF_INET;					
	servaddr.sin_port = htons(5188);				

	servaddr.sin_addr.s_addr  = htonl(INADDR_ANY);			  		

	if((sockfd=socket(AF_INET,SOCK_STREAM,0/*IPPROTO_TCP*/))==-1)    
		ERR_EXIT("open socket error\n");
	else
		printf("create socket %d success \n",sockfd);
	
	if(bind(sockfd,(struct sockaddr*)&servaddr,sizeof(servaddr))<0)	
		ERR_EXIT("bind error\n");				
	
	listen(sockfd,SOMAXCONN);					
	
	 peerlen = sizeof(peeraddr);		
	
	if((nfd=accept(sockfd,(struct sockaddr*)&peeraddr,&peerlen)) < 0)	
		ERR_EXIT("accept error\n");
	

	
	while(1)
	{
		memset(buffer,0,sizeof(buffer));				
		ret = read(nfd,buffer,sizeof(buffer));				
		fputs(buffer,stdout);
		write(nfd,buffer,ret);						
	}
	
	close(sockfd);								
	close(nfd);	
		
	return 0;
}